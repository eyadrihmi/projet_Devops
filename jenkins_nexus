pipeline {
    agent any
    
    environment {
        
        dockerImage = ''
        registry = "eyadrihmi/achat"
        
            }
    stages {
        stage('GIT') { 
            steps {
                git url:'https://github.com/eyadrihmi/projet_Devops.git'
            }
        }
    
        stage('UNIT Testing') {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('Integration testing') {
            steps {
                sh 'mvn verify -DskipUnitTests'
            }
        }

        stage('Maven Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        
        stage("Running Tests with Mockito & JUnit Test") {
            steps {
                sh 'mvn test'
            }
        }
        
        stage('SonarQube analysis') {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'sonar-api') {
                        sh 'mvn clean package sonar:sonar'
                    }
                }  
            }
        }
   
        stage('MAVEN Nexus') {
            steps {
                script {
                    nexusArtifactUploader artifacts: 
                    [
                    [
                    artifactId: 'achat',
                    classifier: '',
                    file: 'target/achat-1.0.jar',
                    type: 'jar'
                    ]
                    ],
                    credentialsId: 'nexus-auth',
                    groupId: 'tn.esprit.rh', 
                    nexusUrl: '172.29.12.42:8081',
                    nexusVersion: 'nexus3',
                    protocol: 'http',
                    repository: 'demoapp-release',
                    version: '1.0'
                  
                }
            }
        }
         stage('Building our image') {
                steps {
                    script {
                    dockerImage = docker.build registry + ":$BUILD_NUMBER"
                }
            }
        }
    }
}
